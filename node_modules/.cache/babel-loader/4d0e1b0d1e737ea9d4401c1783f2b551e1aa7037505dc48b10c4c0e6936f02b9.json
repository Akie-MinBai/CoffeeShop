{"ast":null,"code":"// 导入createSlice函数和axios库\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// 创建一个名为foods的slice，初始状态为coffeeList和coffeeOrder\nconst foodsStore = createSlice({\n  name: \"foods\",\n  initialState: {\n    coffeeList: [],\n    coffeeOrder: []\n  },\n  // 定义两个reducer函数\n  reducers: {\n    // 将action.payload添加到coffeeOrder数组中\n    getCoffeeOrder(state, action) {\n      state.coffeeOrder.push(action.payload);\n    },\n    // 将action.payload赋值给coffeeList\n    setCoffeeList(state, action) {\n      state.coffeeList = action.payload;\n    }\n  }\n});\n// 从slice中解构出getCoffeeOrder和setCoffeeList两个action\nconst {\n  getCoffeeOrder,\n  setCoffeeList\n} = foodsStore.actions;\n// 定义一个异步的action，用于获取coffeeList\nconst getCoffeeList = () => {\n  return async dispatch => {\n    // 发送GET请求，获取数据\n    const res = await axios.get(\"http://localhost:3004/index\");\n    // 调用setCoffeeList action，将获取到的数据赋值给coffeeList\n    dispatch(setCoffeeList(res.data));\n  };\n};\nconst foodsReducer = foodsStore.reducer;\nexport { getCoffeeOrder, getCoffeeList };\nexport default foodsReducer;","map":{"version":3,"names":["createSlice","axios","foodsStore","name","initialState","coffeeList","coffeeOrder","reducers","getCoffeeOrder","state","action","push","payload","setCoffeeList","actions","getCoffeeList","dispatch","res","get","data","foodsReducer","reducer"],"sources":["E:/MinBaiProjects/24_11_09_ReactCoffee项目/coffee/src/store/modules/takeaway.js"],"sourcesContent":["// 导入createSlice函数和axios库\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// 创建一个名为foods的slice，初始状态为coffeeList和coffeeOrder\nconst foodsStore = createSlice({\n    name: \"foods\",\n    initialState: {\n        coffeeList:[],\n        coffeeOrder: [],\n    },\n    // 定义两个reducer函数\n    reducers: {\n        // 将action.payload添加到coffeeOrder数组中\n        getCoffeeOrder(state, action) {\n            state.coffeeOrder.push(action.payload);\n        },\n        // 将action.payload赋值给coffeeList\n        setCoffeeList(state, action) {\n            state.coffeeList = action.payload\n        }\n    }\n})\n// 从slice中解构出getCoffeeOrder和setCoffeeList两个action\nconst { getCoffeeOrder,setCoffeeList } = foodsStore.actions\n// 定义一个异步的action，用于获取coffeeList\nconst getCoffeeList = () => {\n    return async (dispatch) => {\n        // 发送GET请求，获取数据\n        const res = await axios.get(\"http://localhost:3004/index\")\n        // 调用setCoffeeList action，将获取到的数据赋值给coffeeList\n        dispatch(setCoffeeList(res.data))\n    }\n}\nconst foodsReducer = foodsStore.reducer\nexport { getCoffeeOrder,getCoffeeList }\nexport default foodsReducer"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC3BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,UAAU,EAAC,EAAE;IACbC,WAAW,EAAE;EACjB,CAAC;EACD;EACAC,QAAQ,EAAE;IACN;IACAC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACH,WAAW,CAACK,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC1C,CAAC;IACD;IACAC,aAAaA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACJ,UAAU,GAAGK,MAAM,CAACE,OAAO;IACrC;EACJ;AACJ,CAAC,CAAC;AACF;AACA,MAAM;EAAEJ,cAAc;EAACK;AAAc,CAAC,GAAGX,UAAU,CAACY,OAAO;AAC3D;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,OAAO,MAAOC,QAAQ,IAAK;IACvB;IACA,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,6BAA6B,CAAC;IAC1D;IACAF,QAAQ,CAACH,aAAa,CAACI,GAAG,CAACE,IAAI,CAAC,CAAC;EACrC,CAAC;AACL,CAAC;AACD,MAAMC,YAAY,GAAGlB,UAAU,CAACmB,OAAO;AACvC,SAASb,cAAc,EAACO,aAAa;AACrC,eAAeK,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}